# This script checks the availability of the tools
# needed to build the HTML documentation pages:
# - Doxygen
# - Perl (to count the lines of code)
# - PyYAML module (to postprocess the lines of code counting)
# No targets are created. HTML docs can only be generated by the
# external script generate_docs.py available in the pcmsolvermeta
# repository.
# The online documentation can be updated by calling the
# upload_gh-pages.py script in the pcmsolvermeta repository.

set(BUILD_DOCUMENTATION OFF)
find_package(Doxygen)
find_package(Perl)
include(find_python_module)
find_python_module(yaml)
if(DOXYGEN_FOUND AND PERL_FOUND AND PY_YAML)
    set(BUILD_DOCUMENTATION ON)
    message(STATUS "Doxygen, Perl and PyYAML available to build docs")
    # Configure the cloc_tools module
    configure_file(${PROJECT_SOURCE_DIR}/tools/cloc_tools.py.in ${PROJECT_BINARY_DIR}/bin/cloc_tools.py @ONLY)
    # Configure Doxyfile
    configure_file(doc/Doxyfile.in Doxyfile @ONLY)
else()
    message(STATUS "Doxygen and/or Perl and/or PyYAML missing. Cannot build docs")
endif()

# Updates bar charts for given directory of source files
# _src_dir is the source directory
# _lang is the language: CXX, C or Fortran
macro(update_bar_chart _src_dir _lang)
    get_filename_component(_script_name ${_src_dir} NAME)
    set(_working_dir ${PROJECT_BINARY_DIR}/doc/gfx/matplotlib)
    file(MAKE_DIRECTORY ${_working_dir})
    # Generate bar chart script
    set(_counter "import sys; sys.path.append('${PROJECT_BINARY_DIR}/bin'); from cloc_tools import bar_chart; bar_chart('${_src_dir}', '${_lang}')")
    execute_process(COMMAND ${PYTHON_EXECUTABLE} "-c" "${_counter}"
                    WORKING_DIRECTORY ${_working_dir}
                    RESULT_VARIABLE _script_generated
                    )
    # Update bar chart
    execute_process(COMMAND ${PYTHON_EXECUTABLE} ${_working_dir}/${_script_name}.py
                    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/doc/gfx
                    RESULT_VARIABLE _chart_generated
                    )
endmacro()
