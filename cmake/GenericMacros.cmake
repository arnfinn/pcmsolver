function(configure_script infile outfile)
    configure_file(${infile} ${outfile} @ONLY)
    execute_process(COMMAND
        chmod 755 ${outfile} OUTPUT_QUIET)
endfunction()

function(get_cpp_sources list_of_sources)
        file(GLOB _listcpp *.cpp)
        foreach(file_path ${_listcpp})
        	get_filename_component(dir_path ${file_path} NAME)
        	list(APPEND list_of_sources ${dir_path})
        endforeach()
	list(REMOVE_DUPLICATES list_of_sources)
	set(${list_of_sources} PARENT_SCOPE)
endfunction()

function(get_c_sources list_of_sources)
        file(GLOB _listc *.c)
        foreach(file_path ${_listc})
        	get_filename_component(dir_path ${file_path} NAME)
        	list(APPEND list_of_sources ${dir_path})
        endforeach()
	list(REMOVE_DUPLICATES list_of_sources)
	set(${list_of_sources} PARENT_SCOPE)
endfunction()

function(get_fortran_sources list_of_sources)
        file(GLOB _listfortran *.F *.f *.F90 *.f90)
        foreach(file_path ${_listfortran})
        	get_filename_component(dir_path ${file_path} NAME)
        	list(APPEND list_of_sources ${dir_path})
        endforeach()
	list(REMOVE_DUPLICATES list_of_sources)
	set(${list_of_sources} PARENT_SCOPE)
endfunction()

function(get_hpp_headers list_of_headers)
        file(GLOB _listhpp *.hpp)
        foreach(file_path ${_listhpp})
        	get_filename_component(dir_path ${file_path} NAME)
        	list(APPEND list_of_headers ${dir_path})
        endforeach()
	list(REMOVE_DUPLICATES list_of_headers)
	set(${list_of_headers} PARENT_SCOPE)
endfunction()

function(get_h_headers list_of_headers)
        file(GLOB _listh *.h)
        foreach(file_path ${_listh})
        	get_filename_component(dir_path ${file_path} NAME)
        	list(APPEND list_of_headers ${dir_path})
        endforeach()
	list(REMOVE_DUPLICATES list_of_headers)
	set(${list_of_headers} PARENT_SCOPE)
endfunction()

# Convenient wrapper for the install(FILES ... DESTINATION ...) command
# for a list of elements (we tipically use it for header files)
macro(install_list_FILES list_of_files where)
	foreach(filename ${list_of_files})
		install(FILES ${filename} DESTINATION ${where})
	endforeach()
endmacro()

macro(write_to_Includer headers_list)
	foreach(header ${headers_list})
        	file(APPEND "${PROJECT_BINARY_DIR}/include/Includer.hpp" "#include \"${header}\"\n")
        endforeach()
endmacro()
