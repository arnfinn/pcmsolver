#!@PYTHON_EXECUTABLE@
# -*- python -*-
# -*- coding: utf-8 -*-
# vim:filetype=python:
# Update contents of copyright notice on top of source files.
# (c) Roberto Di Remigio  <roberto.d.remigio@uit.no>
# licensed under the GNU Lesser General Public License

import string
import os
import re

# Read copyright notice from file
with open('@CMAKE_SOURCE_DIR@/tools/copyright_notice.txt', 'r') as myfile:
    notice = myfile.readlines()
# Form copyright notice comment
pcmsolver_copyright_fortran = '\n'
pcmsolver_copyright_c       = '\n/*\n'
for line in notice:
    line_fortran = '! ' + line 
    pcmsolver_copyright_fortran += line_fortran
    line_c       = ' *     ' + line.lstrip(' ') 
    pcmsolver_copyright_c       += line_c
pcmsolver_copyright_c += ' */\n'    

pcmsolver_copyright_fortran_start = '!pcmsolver_copyright_start'
pcmsolver_copyright_fortran_end   = '!pcmsolver_copyright_end'

pcmsolver_copyright_c_start = '/\* pcmsolver_copyright_start \*/'
pcmsolver_copyright_c_end   = '/\* pcmsolver_copyright_end \*/'

def from_file(file):

    f = open(file, 'r')
    s = f.read()
    f.close()
    return s

def to_file(s, file):

    f = open(file, 'w')
    f.write(s)
    f.close()

fortran_file_l = []
c_file_l       = []
h_file_l       = []
cpp_file_l     = []
hpp_file_l     = []

pwd = os.getcwd()

for path, dir, files in os.walk(pwd):
    for file in files:
        if file[-4:] == '.F90':
           fortran_file_l.append(path + '/' + file)
        if file[-4:] == '.f90':
           fortran_file_l.append(path + '/' + file)
        if file[-2:] == '.F':
           fortran_file_l.append(path + '/' + file)
        if file[-2:] == '.c':
           c_file_l.append(path + '/' + file)
        if file[-2:] == '.h':
           h_file_l.append(path + '/' + file)
        if file[-4:] == '.cpp':
           cpp_file_l.append(path + '/' + file)
        if file[-4:] == '.hpp':
           hpp_file_l.append(path + '/' + file)

# fortran files pcmsolver copyright
p = re.compile('(?<=' + pcmsolver_copyright_fortran_start + ').*(?=' + pcmsolver_copyright_fortran_end + ')', re.DOTALL)
for file in fortran_file_l:
    s = from_file(file)
    if pcmsolver_copyright_fortran_start in s:
       s = re.sub(p, pcmsolver_copyright_fortran, s)
       to_file(s, file)

# c files pcmsolver copyright
p = re.compile('(?<=' + pcmsolver_copyright_c_start + ').*(?=' + pcmsolver_copyright_c_end + ')', re.DOTALL)
for file in c_file_l:
    s = from_file(file)
    if string.replace(pcmsolver_copyright_c_start, '\\', '') in s:
       s = re.sub(p, pcmsolver_copyright_c, s)
       to_file(s, file)

# h files pcmsolver copyright
p = re.compile('(?<=' + pcmsolver_copyright_c_start + ').*(?=' + pcmsolver_copyright_c_end + ')', re.DOTALL)
for file in h_file_l:
    s = from_file(file)
    if string.replace(pcmsolver_copyright_c_start, '\\', '') in s:
       s = re.sub(p, pcmsolver_copyright_c, s)
       to_file(s, file)

# cpp files pcmsolver copyright
p = re.compile('(?<=' + pcmsolver_copyright_c_start + ').*(?=' + pcmsolver_copyright_c_end + ')', re.DOTALL)
for file in cpp_file_l:
    s = from_file(file)
    if string.replace(pcmsolver_copyright_c_start, '\\', '') in s:
       s = re.sub(p, pcmsolver_copyright_c, s)
       to_file(s, file)

# hpp files pcmsolver copyright
p = re.compile('(?<=' + pcmsolver_copyright_c_start + ').*(?=' + pcmsolver_copyright_c_end + ')', re.DOTALL)
for file in hpp_file_l:
    s = from_file(file)
    if string.replace(pcmsolver_copyright_c_start, '\\', '') in s:
       s = re.sub(p, pcmsolver_copyright_c, s)
       to_file(s, file)

# vim:et:ts=4:sw=4
